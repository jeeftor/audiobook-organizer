name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Debug conditions
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Base ref: ${{ github.event.base_ref }}"
          echo "Ref: ${{ github.ref }}"
          git fetch origin master
          if git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is on master branch: true"
          else
            echo "Tag is on master branch: false"
          fi

  pre-commit:
    runs-on: ubuntu-latest
    needs: debug
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - name: Install Go dependencies
        run: go mod tidy
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files



  release:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Verify on master
        run: |
          git fetch origin master
          if ! git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is not on master branch"
            exit 1
          fi


      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true
          cache-dependency-path: go.sum

      # Generate a GitHub App token for both repositories
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: >-
            audiobook-organizer,
            homebrew-tap

      # Configure Git for commit authoring
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Add build cache for faster compilation
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            dist/
          key: ${{ runner.os }}-build-${{ hashFiles('go.sum') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('go.sum') }}-
            ${{ runner.os }}-build-

      # Run GoReleaser with the GitHub App token
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        timeout-minutes: 10
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --parallelism 4
        env:
          # Use the GitHub App token for both operations
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          # Speed up builds
          GOCACHE: /home/runner/.cache/go-build
          GOMODCACHE: /home/runner/go/pkg/mod

      # Backup artifacts in case release upload fails
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: audiobook-organizer-binaries-failed
          path: dist/*
          retention-days: 5

      - name: Print Version Info
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Ref Name: ${{ github.ref_name }}"
          echo "Version to be released: ${GITHUB_REF#refs/tags/v}"
